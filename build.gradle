buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'java'
group = "${group_name}.${author_name}"
compileJava.options.encoding = "UTF-8"

project("Core"){
    apply plugin: 'java'

    repositories{
        mavenCentral()
    }

    dependencies{
        compileOnly "com.google.code.gson:gson:2.9.0"
        compileOnly "org.apache.logging.log4j:log4j-api:2.15.0"
        compileOnly "org.apache.logging.log4j:log4j-core:2.15.0"
        compileOnly "org.apache.logging.log4j:log4j-slf4j18-impl:2.15.0"
    }
    //sourceSets.main.java.srcDir('src/main/java')
}

project("Forge-1.16.5") {

    apply plugin: 'java-library'
    apply plugin: 'net.minecraftforge.gradle'
    apply plugin: 'org.spongepowered.mixin'

    version = "1.16.5-forge-${mod_version}"

    java {
        archivesBaseName = "${mod_name}"
        toolchain.languageVersion = JavaLanguageVersion.of(16)
        //sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.16'
    }

    minecraft {
        mappings channel: "official", version: "1.16.5"
        runs {
            client {
                workingDirectory project.file('run')
                property 'forge.logging.markers', 'REGISTRIES'
                property 'forge.logging.console.level', 'debug'

                mods {
                    cmcgui119 {
                        source sourceSets.main
                    }
                }
            }

            server {
                workingDirectory project.file('run')
                property 'forge.logging.markers', 'REGISTRIES'
                property 'forge.logging.console.level', 'debug'

                mods {
                    cmcgui119 {
                        source sourceSets.main
                    }
                }
            }

            data {
                workingDirectory project.file('run')
                property 'forge.logging.markers', 'REGISTRIES'
                property 'forge.logging.console.level', 'debug'
                args '--mod', 'cmcgui119', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

                mods {
                    cmcgui119 {
                        source sourceSets.main
                    }
                }
            }
        }
    }
    sourceSets {
        main {
            compileClasspath += project(':Core').configurations.compileClasspath
            runtimeClasspath += project(':Core').configurations.runtimeClasspath
            java {
                srcDirs = ["src/main/java", "$rootDir/Core/src/main/java"]
            }
            resources {
                srcDirs = [
                        'src/generated/resources', 'src/main/resources'
                ]
            }
        }
    }
    repositories {
    }

    dependencies {
        minecraft "net.minecraftforge:forge:1.16.5-36.2.22"
        annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
        api(project(":Core"))
        implementation "com.google.code.gson:gson:2.9.0"
    }

    jar {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        ant.replaceregexp(match: '@MOD_VERSION@', replace: "${mod_version}", flags: 'g', byline: true) {
            fileset(dir: 'src/main/resources/META-INF', includes: 'mods.toml')
        }
        manifest {
            attributes([
                    "Specification-Title"     : "cmcgui119",
                    "Specification-Vendor"    : "niki119",
                    "Specification-Version"   : "1",
                    "Implementation-Title"    : project.name,
                    "Implementation-Version"  : project.jar.archiveVersion,
                    "Implementation-Vendor"   : "niki119",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
            ])
        }
    }

    jar.finalizedBy('reobfJar')
}

project("Forge-1.19") {

    apply plugin: 'java-library'
    apply plugin: 'net.minecraftforge.gradle'
    apply plugin: 'org.spongepowered.mixin'

    version = "1.19-forge-${mod_version}"

    java {
        archivesBaseName = "${mod_name}"
        toolchain.languageVersion = JavaLanguageVersion.of(17)
    }

    minecraft {
        mappings channel: "official", version: "1.19"
        runs {
            client {
                workingDirectory project.file('run')
                property 'forge.logging.markers', 'REGISTRIES'
                property 'forge.logging.console.level', 'debug'

                mods {
                    cmcgui119 {
                        source sourceSets.main
                    }
                }
            }

            server {
                workingDirectory project.file('run')
                property 'forge.logging.markers', 'REGISTRIES'
                property 'forge.logging.console.level', 'debug'

                mods {
                    cmcgui119 {
                        source sourceSets.main
                    }
                }
            }

            data {
                workingDirectory project.file('run')
                property 'forge.logging.markers', 'REGISTRIES'
                property 'forge.logging.console.level', 'debug'
                args '--mod', 'cmcgui119', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

                mods {
                    cmcgui119 {
                        source sourceSets.main
                    }
                }
            }
        }
    }
    sourceSets {
        main {
            compileClasspath += project(':Core').configurations.compileClasspath
            runtimeClasspath += project(':Core').configurations.runtimeClasspath
            java {
                srcDirs = ["src/main/java", "$rootDir/Core/src/main/java"]
            }
            resources {
                srcDirs = [
                        'src/generated/resources', 'src/main/resources'
                ]
            }
        }
    }

    repositories {
    }

    dependencies {
        minecraft "net.minecraftforge:forge:1.19-41.0.38"
        annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
        api(project(":Core"))
        implementation "com.google.code.gson:gson:2.9.0"
    }

    jar {
        ant.replaceregexp(match: '@MOD_VERSION@', replace: "${mod_version}", flags: 'g', byline: true) {
            fileset(dir: 'src/main/resources/META-INF', includes: 'mods.toml')
        }
        manifest {
            attributes([
                    "Specification-Title"     : "cmcgui119",
                    "Specification-Vendor"    : "niki119",
                    "Specification-Version"   : "1",
                    "Implementation-Title"    : project.name,
                    "Implementation-Version"  : project.jar.archiveVersion,
                    "Implementation-Vendor"   : "niki119",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
            ])
        }
    }

    jar.finalizedBy('reobfJar')
}